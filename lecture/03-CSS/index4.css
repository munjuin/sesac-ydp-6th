/* 
:hober
  요소에 마우스를 올렸을 때
:active 
  요소를 마우스로 클릭하고 있을 때
:focus
  요소에 포커스가 되었을 때
:visited
  요소에 방문 하고 나면
*/

.div1 {
  width: 100px;
  height: 100px;
  background-color: aquamarine;
}
.div1:hover {
  background-color: hotpink;
  width: 150px;
  height: 150px;
}
.div1:active {
  background-color: brown;
  width: 200px;
}
input:focus {
  background-color: violet;
  color: lightblue;
  outline-color: yellowgreen;
}
.links > a:hover {
  background-color: coral;
}
.links > a:visited {
  color: red;
}

/* 
요소 상황에 따른 가상 클래스 선택자
*/
/* 
E:first-child
  요소가 첫번째 요소 선택
E:last-child
  요소가 마지막 요소 선택
E:nth-child(n)
  요소가 n번쨰 요소 선택
E:not(x)
  요소가 x가 아닌 요소를 선택

*/
.zoo > * {
  background-color: green;
  color: white;
}
.zoo > :first-child {
  background-color: red;
}
.zoo > :last-child {
  background-color: black;
}
.zoo > :nth-child(2) {
  background-color: aqua;
}
.zoo > :not(div) {
  background-color: pink;
}

.box::before {
  content: '택시';
}
.box::after {
  content: '빨리' !important;
}

/* 가상요소 ::before, ::after */
/* HTML 의 특정 부분을 스타일링하기 위해 사용
  실제로 HTML에 존재하지 않는 부분이지만 CSS 를 통해 스타일 적용이 가능

  가상클래ㅅ : &ㄱ가상요소 :: 의 차이 란?
  CSS 사양이 발전하면서 가상클래스와 가상 요소를 명확하게 구분할 필요성이 생김.
  가상클래스 - 문서의 기존 요소 상태를 나타 냄
  가상요소 - 문서의 특정 부분을 생성하여 스타일링 함
  그렇기에 구분하기 위해서 :: 로 표기하는 새로운 표기법을 도입
*/
